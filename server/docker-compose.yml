services:
  api_deep:
    container_name: api_deep
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - DATABASE_HOST=postgres_deep
      - DATABASE_PORT=5433
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=deeporigin
      - REDIS_HOST=redis_deep
      - REDIS_PORT=6379
      - KAFKA_BROKER=kafka_deep:29092
      - DATABASE_URL=postgresql://postgres:postgres@postgres_deep:5432/deeporigin
    depends_on:
      - postgres_deep
      - redis_deep
      - kafka_deep
    networks:
      - deep_network

  postgres_deep:
    container_name: postgres_deep
    image: postgres:16-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=deeporigin
    volumes:
      - postgres_data_deep:/var/lib/postgresql/data
    networks:
      - deep_network

  redis_deep:
    container_name: redis_deep
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data_deep:/data
    networks:
      - deep_network

  zookeeper_deep:
    container_name: zookeeper_deep
    image: confluentinc/cp-zookeeper:7.5.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data_deep:/var/lib/zookeeper/data
      - zookeeper_log_deep:/var/lib/zookeeper/log
    networks:
      - deep_network

  kafka_deep:
    container_name: kafka_deep
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_deep:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_deep:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper_deep
    networks:
      - deep_network

networks:
  deep_network:
    driver: bridge

volumes:
  postgres_data_deep:
  redis_data_deep:
  api_node_modules_deep:
  zookeeper_data_deep:
  zookeeper_log_deep: